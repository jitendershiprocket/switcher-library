{"version":3,"file":"shiprocket-switcher-lib.mjs","sources":["../../../projects/switcher/src/lib/switcher.service.ts","../../../projects/switcher/src/lib/switcher.component.ts","../../../projects/switcher/src/lib/switcher.module.ts","../../../projects/switcher/src/public-api.ts","../../../projects/switcher/src/shiprocket-switcher-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwitcherService {\n\n  constructor() { }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-switcher',\n  template: `\n    <button (click)=\"openModal()\">Open Modal</button>\n    <div *ngIf=\"isModalOpen\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <p>{{ data }}</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .modal { display: block; position: fixed; /* Add styles for your modal */ }\n    .modal-content { /* Add styles for content */ }\n    .close { cursor: pointer; }\n  `]\n})\nexport class SwitcherComponent {\n  @Input() data: string = '';\n  isModalOpen = false;\n\n  openModal() {\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { SwitcherComponent } from './switcher.component'; // Make sure this is the correct component\n\n@NgModule({\n    declarations: [SwitcherComponent],\n    imports: []\n})\nexport class SwitcherModule {\n  constructor(private injector: Injector) {\n    // Create the custom element\n    const el = createCustomElement(SwitcherComponent, { injector });\n    // Register the custom element\n    customElements.define('switcher-element', el);\n  }\n\n  ngDoBootstrap() {} // Empty since we are bootstrapping via custom element\n}\n","/*\n * Public API Surface of switcher\n */\n\nexport * from './lib/switcher.service';\nexport * from './lib/switcher.component';\nexport * from './lib/switcher.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAKa,eAAe,CAAA;AAE1B,IAAA,WAAA,GAAA;+GAFW,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;;4FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE;AACb,iBAAA;;;MCeY,iBAAiB,CAAA;AAjB9B,IAAA,WAAA,GAAA;QAkBW,IAAI,CAAA,IAAA,GAAW,EAAE;QAC1B,IAAW,CAAA,WAAA,GAAG,KAAK;AASpB;IAPC,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI;;IAGzB,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK;;+GATf,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,EAflB,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA;;;;;;;;AAQT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,8DAAA,CAAA,EAAA,CAAA,CAAA;;4FAOU,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAjB7B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EACd,QAAA,EAAA;;;;;;;;AAQT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,8DAAA,CAAA,EAAA;8BAQQ,IAAI,EAAA,CAAA;sBAAZ;;;MCZU,cAAc,CAAA;AACzB,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ;;QAE1B,MAAM,EAAE,GAAG,mBAAmB,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,CAAC;;AAE/D,QAAA,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC;;IAG/C,aAAa,GAAA,GAAK;+GARP,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBAHR,iBAAiB,CAAA,EAAA,CAAA,CAAA;gHAGvB,cAAc,EAAA,CAAA,CAAA;;4FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,YAAY,EAAE,CAAC,iBAAiB,CAAC;AACjC,oBAAA,OAAO,EAAE;AACZ,iBAAA;;;ACPD;;AAEG;;ACFH;;AAEG;;;;"}