{"version":3,"file":"shiprocket-switcher-lib.umd.js","sources":["../../../projects/switcher/src/lib/switcher.component.ts","../../../projects/switcher/src/lib/switcher.module.ts","../../../projects/switcher/src/public-api.ts","../../../projects/switcher/src/shiprocket-switcher-lib.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-switcher',\n  template: `\n    <button (click)=\"openModal()\">Open Modal</button>\n    <div *ngIf=\"isModalOpen\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <p>{{ data }}</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .modal { display: block; position: fixed; /* Add styles for your modal */ }\n    .modal-content { /* Add styles for content */ }\n    .close { cursor: pointer; }\n  `]\n})\nexport class SwitcherComponent {\n  @Input() data: string = '';\n  isModalOpen = false;\n\n  openModal() {\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n}","import { Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { SwitcherComponent } from './switcher.component'; // Make sure this is the correct component\n\n@NgModule({\n  declarations: [SwitcherComponent],\n  imports: [],\n  entryComponents: [SwitcherComponent], // Ensure SwitcherComponent is part of entry components\n})\nexport class SwitcherModule {\n  constructor(private injector: Injector) {\n    // Create the custom element\n    const el = createCustomElement(SwitcherComponent, { injector });\n    // Register the custom element\n    customElements.define('switcher-element', el);\n  }\n\n  ngDoBootstrap() {} // Empty since we are bootstrapping via custom element\n}","/*\n * Public API Surface of switcher\n */\n\nexport * from './lib/switcher.component';\nexport * from './lib/switcher.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Component","Input","createCustomElement","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAA,iBAAA,kBAAA,YAAA;EAjBA,IAAA,SAAA,iBAAA,GAAA;EAkBW,QAAA,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;EAC3B,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;OASrB;EAPC,IAAA,iBAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;EACE,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;OACzB,CAAA;EAED,IAAA,iBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,YAAA;EACE,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;OAC1B,CAAA;;;uIAVU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;EAAjB,iBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,EAflB,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,iRAQT,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,6KAAA,CAAA,EAAA,CAAA,CAAA;oHAOU,iBAAiB,EAAA,UAAA,EAAA,CAAA;oBAjB7BC,YAAS;EAAC,YAAA,IAAA,EAAA,CAAA;EACT,oBAAA,QAAQ,EAAE,cAAc;EACxB,oBAAA,QAAQ,EAAE,iRAQT;sBACD,MAAM,EAAE,CAAC,6KAIR,CAAC;mBACH,CAAA;gCAEU,IAAI,EAAA,CAAA;wBAAZC,QAAK;;;ACXR,MAAA,cAAA,kBAAA,YAAA;EACE,IAAA,SAAA,cAAA,CAAoB,QAAkB,EAAA;EAAlB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;;UAEpC,IAAM,EAAE,GAAGC,4BAAmB,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAA,QAAA,EAAE,CAAC,CAAC;;EAEhE,QAAA,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;OAC/C;EAED,IAAA,cAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA,GAAkB,CAAA;;;oIARP,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAH,aAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;EAAd,cAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,cAAc,iBAJV,iBAAiB,CAAA,EAAA,CAAA,CAAA;EAIrB,cAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,cAAc,YAHhB,EAAE,CAAA,EAAA,CAAA,CAAA;oHAGA,cAAc,EAAA,UAAA,EAAA,CAAA;oBAL1BI,WAAQ;EAAC,YAAA,IAAA,EAAA,CAAA;sBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;EACjC,oBAAA,OAAO,EAAE,EAAE;EACX,oBAAA,eAAe,EAAE,CAAC,iBAAiB,CAAC;mBACrC,CAAA;;;ECRD;;EAEG;;ECFH;;EAEG;;;;;;;;;;;"}